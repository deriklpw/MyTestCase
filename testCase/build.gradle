apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.derik.demo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        versionCode 1
        versionName "1.00.00"

        //多渠道打包的维度
        flavorDimensions 'versionCode'

        //多渠道打包Value的默认值
        manifestPlaceholders = [ CHANNEL_VALUE:"default" ]

    }

    // 签名配置
    signingConfigs {
        release {
            storeFile file("test.jks")
            storePassword "123456"
            keyAlias "test"
            keyPassword "123456"
        }
    }

    // 忽略错误
    lintOptions {
        abortOnError false
    }

    // 多渠道打包配置
    productFlavors {
        //单独渠道的Value
//        xiaomi {
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
//        }

        //批量
        yanbober{}
        wandoujia{}
        xiaomi{}
        baidu{}

    }
    productFlavors.all { flavor ->
        //批量,所有的都用名字当作Value
        flavor.manifestPlaceholders = [ CHANNEL_VALUE:name ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }

        externalNativeBuild {
            ndkBuild {
                path file("src/main/jni/Android.mk")
            }
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    //修改生成的apk名字
    applicationVariants.all { variant ->
        if (variant.buildType.name.equals('release') || variant.buildType.name.equals('debug')) {
            variant.outputs.all {
                def appName = archivesBaseName
//                def fileName = appName + "${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
                def fileName = appName + "-${variant.buildType.name}-V${defaultConfig.versionName}-${variant.productFlavors[0].name}.apk"
                outputFileName = fileName
            }
        }
    }

}

dependencies {
    implementation files('libs/mysdk.jar')
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v13:$rootProject.supportLibraryVersion"
    implementation "com.android.support:percent:$rootProject.supportLibraryVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.layoutVersion"
    implementation 'com.github.deriklpw:library:0abd8ba9b0'
    implementation 'com.orhanobut:logger:1.15'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
}

println "testCase build.gradle."
// load plugin
apply from: project.getRootDir().getAbsolutePath() + "/utils.gradle"
